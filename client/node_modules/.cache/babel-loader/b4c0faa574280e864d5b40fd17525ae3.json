{"ast":null,"code":"import _classCallCheck from \"D:\\\\SEM-7\\\\CAD\\\\shms\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"D:\\\\SEM-7\\\\CAD\\\\shms\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\SEM-7\\\\CAD\\\\shms\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"D:\\\\SEM-7\\\\CAD\\\\shms\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\SEM-7\\\\CAD\\\\shms\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\SEM-7\\\\CAD\\\\shms\\\\client\\\\src\\\\components\\\\dashboard\\\\Cards.js\";\nimport React, { Component } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport Modal from \"react-bootstrap/Modal\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getPatientLists } from \"../../actions/patientlistActions\";\nimport { loginUser } from \"../../actions/authActions\";\n\nvar useCardStyles = function useCardStyles(theme) {\n  return {\n    root: {\n      minWidth: 275,\n      maxWidth: 275\n    },\n    bullet: {\n      display: \"inline-block\",\n      margin: \"0 2px\",\n      transform: \"scale(0.8)\"\n    },\n    title: {\n      fontSize: 14\n    },\n    pos: {\n      marginBottom: 12\n    }\n  };\n};\n\nvar SimpleCard = /*#__PURE__*/function (_Component) {\n  _inherits(SimpleCard, _Component);\n\n  _createClass(SimpleCard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getPatientLists();\n    }\n  }]);\n\n  function SimpleCard(props) {\n    var _this;\n\n    _classCallCheck(this, SimpleCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SimpleCard).call(this, props));\n\n    _this.onShow = function () {\n      _this.setState({\n        show: true\n      });\n    };\n\n    _this.state = {\n      show: false\n    };\n    return _this;\n  }\n\n  _createClass(SimpleCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      var list = this.props.patients.list;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          marginLeft: \"150px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }\n      }, this.props.patients.list !== null ? !this.props.patients.loading ? console.log(\"lists : \", list) : \"\" : \"\", list.data ? /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }, list.data) : Object.keys(list).map(function (key) {\n        console.log(list[key].disease.toString().split(\",\"));\n        Object.keys(list[key].disease.toString().split(\",\")).map(function (index) {\n          console.log(list[key].disease.toString().split(\",\")[index]);\n        });\n        return /*#__PURE__*/React.createElement(Card, {\n          className: classes.root,\n          style: {\n            backgroundImage: \"linear-gradient(180deg,rgb(12,194,146),rgb(13, 231, 160),rgb(24, 242, 180))\",\n            minWidth: 300,\n            maxWidth: 300,\n            margin: \"10px 20px 10px 20px\"\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(CardContent, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Typography, {\n          variant: \"h4\",\n          component: \"h2\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 19\n          }\n        }, list[key].name), /*#__PURE__*/React.createElement(Typography, {\n          className: classes.pos,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 19\n          }\n        }, \"Disease\", /*#__PURE__*/React.createElement(Typography, {\n          className: classes.title,\n          color: \"textSecondary\",\n          gutterBottom: true,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }\n        }, list[key].disease)), /*#__PURE__*/React.createElement(Typography, {\n          className: classes.pos,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 19\n          }\n        }, \"Since\", /*#__PURE__*/React.createElement(Typography, {\n          className: classes.title,\n          color: \"textSecondary\",\n          gutterBottom: true,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }\n        }, list[key].from)), /*#__PURE__*/React.createElement(Typography, {\n          className: classes.pos,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 19\n          }\n        }, \"Description\", /*#__PURE__*/React.createElement(Typography, {\n          className: classes.title,\n          color: \"textSecondary\",\n          gutterBottom: true,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }\n        }, list[key].description))), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            borderColor: \"rgb(197, 251, 237)\",\n            borderWidth: \"1px\",\n            border: \"1px solid rgb(197, 251, 237)\"\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(CardActions, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            cursor: \"context-menu\"\n          },\n          onClick: function onClick() {\n            return _this2.onShow;\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 19\n          }\n        }, \"Write Prescription\")), /*#__PURE__*/React.createElement(Modal, {\n          show: _this2.state.show,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }\n        }));\n      }));\n    }\n  }]);\n\n  return SimpleCard;\n}(Component);\n\nSimpleCard.propTypes = {\n  getPatientLists: PropTypes.func.isRequired,\n  patients: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    patients: state.patients\n  };\n};\n\nexport default withStyles(useCardStyles)(connect(mapStateToProps, {\n  loginUser: loginUser,\n  getPatientLists: getPatientLists\n})(SimpleCard));","map":{"version":3,"sources":["D:/SEM-7/CAD/shms/client/src/components/dashboard/Cards.js"],"names":["React","Component","makeStyles","withStyles","Card","Modal","CardActions","CardContent","Button","Typography","PropTypes","connect","getPatientLists","loginUser","useCardStyles","theme","root","minWidth","maxWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","SimpleCard","props","onShow","setState","show","state","classes","list","patients","flexWrap","marginLeft","loading","console","log","data","Object","keys","map","key","disease","toString","split","index","backgroundImage","name","from","description","borderColor","borderWidth","border","cursor","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPatientLists } from \"../../actions/patientlistActions\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\n\r\nconst useCardStyles = theme => ({\r\n  root: {\r\n    minWidth: 275,\r\n    maxWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\nclass SimpleCard extends Component {\r\n  componentDidMount() {\r\n    this.props.getPatientLists();\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { show: false };\r\n  }\r\n\r\n  onShow = () => {\r\n    this.setState({\r\n      show: true,\r\n    });\r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { list } = this.props.patients;\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\",\r\n          marginLeft: \"150px\",\r\n        }}\r\n      >\r\n        {this.props.patients.list !== null\r\n          ? !this.props.patients.loading\r\n            ? console.log(\"lists : \", list)\r\n            : \"\"\r\n          : \"\"}\r\n        {list.data ? (\r\n          <p>{list.data}</p>\r\n        ) : (\r\n          Object.keys(list).map(key => {\r\n            console.log(list[key].disease.toString().split(\",\"));\r\n            Object.keys(list[key].disease.toString().split(\",\")).map(index => {\r\n              console.log(list[key].disease.toString().split(\",\")[index]);\r\n            });\r\n            return (\r\n              <Card\r\n                className={classes.root}\r\n                style={{\r\n                  backgroundImage:\r\n                    \"linear-gradient(180deg,rgb(12,194,146),rgb(13, 231, 160),rgb(24, 242, 180))\",\r\n                  minWidth: 300,\r\n                  maxWidth: 300,\r\n                  margin: \"10px 20px 10px 20px\",\r\n                }}\r\n              >\r\n                <CardContent>\r\n                  <Typography variant='h4' component='h2'>\r\n                    {list[key].name}\r\n                  </Typography>\r\n                  <Typography className={classes.pos}>\r\n                    Disease\r\n                    <Typography\r\n                      className={classes.title}\r\n                      color='textSecondary'\r\n                      gutterBottom\r\n                    >\r\n                      {list[key].disease}\r\n                    </Typography>\r\n                  </Typography>\r\n\r\n                  <Typography className={classes.pos}>\r\n                    Since\r\n                    <Typography\r\n                      className={classes.title}\r\n                      color='textSecondary'\r\n                      gutterBottom\r\n                    >\r\n                      {list[key].from}\r\n                    </Typography>\r\n                  </Typography>\r\n\r\n                  <Typography className={classes.pos}>\r\n                    Description\r\n                    <Typography\r\n                      className={classes.title}\r\n                      color='textSecondary'\r\n                      gutterBottom\r\n                    >\r\n                      {list[key].description}\r\n                    </Typography>\r\n                  </Typography>\r\n                </CardContent>\r\n                <div\r\n                  style={{\r\n                    borderColor: \"rgb(197, 251, 237)\",\r\n                    borderWidth: \"1px\",\r\n                    border: \"1px solid rgb(197, 251, 237)\",\r\n                  }}\r\n                ></div>\r\n                <CardActions>\r\n                  <div\r\n                    style={{ cursor: \"context-menu\" }}\r\n                    onClick={() => this.onShow}\r\n                  >\r\n                    Write Prescription\r\n                  </div>\r\n                </CardActions>\r\n                <Modal show={this.state.show} />\r\n              </Card>\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nSimpleCard.propTypes = {\r\n  getPatientLists: PropTypes.func.isRequired,\r\n  patients: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  patients: state.patients,\r\n});\r\nexport default withStyles(useCardStyles)(\r\n  connect(mapStateToProps, { loginUser, getPatientLists })(SimpleCard)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"D:\\\\SEM-7\\\\CAD\\\\shms\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\SEM-7\\\\CAD\\\\shms\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\SEM-7\\\\CAD\\\\shms\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\SEM-7\\\\CAD\\\\shms\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\SEM-7\\\\CAD\\\\shms\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\SEM-7\\\\CAD\\\\shms\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\SEM-7\\\\CAD\\\\shms\\\\client\\\\src\\\\components\\\\dashboard\\\\Modals.js\";\nimport React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getAPatient, freePatientData } from \"../../actions/patientlistActions\";\nimport QRCode from \"qrcode.react\";\n\nvar Modals = /*#__PURE__*/function (_Component) {\n  _inherits(Modals, _Component);\n\n  function Modals(props) {\n    var _this;\n\n    _classCallCheck(this, Modals);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Modals).call(this, props));\n    _this.state = {\n      show: false,\n      prescription: \"Enter the prescription here\"\n    };\n    _this.handleShow = _this.handleShow.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Modals, [{\n    key: \"handleShow\",\n    value: function handleShow() {\n      console.log(\"in handle show\");\n      this.setState({\n        show: true\n      });\n    }\n  }, {\n    key: \"handleClose\",\n    value: function handleClose() {\n      console.log(\"in handle close\");\n      this.setState({\n        show: false\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      console.log(e.target.value);\n      this.setState({\n        prescription: e.target.value\n      });\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(id) {\n      console.log(\"patient id :\", id);\n      this.props.freePatientData(id);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"component mounted\");\n      this.props.getAPatient(this.props.match.params.id);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      console.log(\"component unmounted\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var data = this.props.patients.data;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n        to: \"/dashboard\",\n        className: \"btn-flat waves-effect\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"material-icons left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }, \"keyboard_backspace\"), \" Back to patient list\"), console.log(\"id : \", data), /*#__PURE__*/React.createElement(Form, {\n        style: {\n          marginLeft: \"2rem\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formPlaintextEmail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        column: true,\n        sm: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(Col, {\n        sm: \"10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        plaintext: true,\n        readOnly: true,\n        defaultValue: data.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formPlaintextEmail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        column: true,\n        sm: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }, \"Since\"), /*#__PURE__*/React.createElement(Col, {\n        sm: \"10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        plaintext: true,\n        readOnly: true,\n        defaultValue: typeof data.from === undefined ? \"No data available\" : data.from,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formPlaintextEmail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        column: true,\n        sm: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }, \"Disease\"), /*#__PURE__*/React.createElement(Col, {\n        sm: \"10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        plaintext: true,\n        readOnly: true,\n        defaultValue: data.disease,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formPlaintextEmail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        column: true,\n        sm: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      }, \"Description\"), /*#__PURE__*/React.createElement(Col, {\n        sm: \"10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }\n      }, !data.disease ? console.log(\"Data not available\") : console.log(\"Data available\"), /*#__PURE__*/React.createElement(Form.Control, {\n        as: \"textarea\",\n        rows: \"3\",\n        readOnly: true,\n        defaultValue: !data.description ? \"Not available\" : data.description,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formPlaintextEmail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        column: true,\n        sm: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }\n      }, \"Prescription\"), /*#__PURE__*/React.createElement(Col, {\n        sm: \"10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        as: \"textarea\",\n        rows: \"3\",\n        value: this.state.prescription,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.handleShow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }\n      }, \"Generate QR code.\")), /*#__PURE__*/React.createElement(Modal, {\n        show: this.state.show,\n        onHide: this.handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        closeButton: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }\n      }, \"QR code\")), /*#__PURE__*/React.createElement(Modal.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(QRCode, {\n        value: this.state.prescription,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(Modal.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/dashboard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: this.handleClick(data._id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }\n      }, \"Finish\")))));\n    }\n  }]);\n\n  return Modals;\n}(Component);\n\nModals.propTypes = {\n  getAPatient: PropTypes.func.isRequired,\n  freePatientData: PropTypes.func.isRequired,\n  patients: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    patients: state.patients\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getAPatient: getAPatient,\n  freePatientData: freePatientData\n})(Modals);","map":{"version":3,"sources":["D:/SEM-7/CAD/shms/client/src/components/dashboard/Modals.js"],"names":["React","Component","Button","Form","Row","Col","Modal","Link","PropTypes","connect","getAPatient","freePatientData","QRCode","Modals","props","state","show","prescription","handleShow","bind","handleClose","console","log","setState","e","target","value","id","match","params","data","patients","marginLeft","name","from","undefined","disease","description","handleChange","handleClick","_id","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getAPatient,freePatientData } from \"../../actions/patientlistActions\";\r\nimport QRCode from \"qrcode.react\"\r\n\r\nclass Modals extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false,\r\n      prescription:\"Enter the prescription here\",\r\n    };\r\n    this.handleShow = this.handleShow.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n  }\r\n  handleShow() {\r\n    console.log(\"in handle show\");\r\n    this.setState({\r\n      show: true,\r\n    });\r\n  }\r\n  handleClose() {\r\n    console.log(\"in handle close\");\r\n    this.setState({\r\n      show: false,\r\n    });\r\n  }\r\n  handleChange(e){\r\n    console.log(e.target.value)\r\n    this.setState({\r\n      prescription : e.target.value\r\n    })\r\n  }\r\n  handleClick(id){\r\n    console.log(\"patient id :\",id)\r\n    this.props.freePatientData(id)\r\n}\r\n  componentDidMount() {\r\n    console.log(\"component mounted\")\r\n    this.props.getAPatient(this.props.match.params.id);\r\n  }\r\n  componentWillUnmount(){\r\n    console.log(\"component unmounted\")\r\n\r\n  }\r\n  render() {\r\n\r\n    const { data } = this.props.patients;\r\n    return (\r\n      <>\r\n        <Link to='/dashboard' className='btn-flat waves-effect'>\r\n          <i className='material-icons left'>keyboard_backspace</i> Back to\r\n          patient list\r\n        </Link>\r\n        {console.log(\"id : \",data)}\r\n        <Form style={{ marginLeft: \"2rem\" }}>\r\n        <Form.Group as={Row} controlId='formPlaintextEmail'>\r\n            <Form.Label column sm='1'>\r\n              Name\r\n            </Form.Label>\r\n            <Col sm='10'>\r\n              <Form.Control\r\n                plaintext\r\n                readOnly\r\n                defaultValue={data.name }\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n          <Form.Group as={Row} controlId='formPlaintextEmail'>\r\n            <Form.Label column sm='1'>\r\n              Since\r\n            </Form.Label>\r\n            <Col sm='10'>\r\n              <Form.Control\r\n                plaintext\r\n                readOnly\r\n                defaultValue={typeof(data.from) === undefined ? \"No data available\" : data.from}\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n          <Form.Group as={Row} controlId='formPlaintextEmail'>\r\n            <Form.Label column sm='1'>\r\n              Disease\r\n            </Form.Label>\r\n            <Col sm='10'>\r\n              <Form.Control\r\n                plaintext\r\n                readOnly\r\n                defaultValue={data.disease }\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n          <Form.Group as={Row} controlId='formPlaintextEmail'>\r\n            <Form.Label column sm='1'>\r\n              Description\r\n            </Form.Label>\r\n            <Col sm='10'>\r\n              { !data.disease ? console.log(\"Data not available\") : console.log(\"Data available\")}\r\n              <Form.Control as='textarea' rows='3' readOnly defaultValue={!data.description?\"Not available\":data.description} />\r\n            </Col>\r\n          </Form.Group>\r\n          <Form.Group as={Row} controlId='formPlaintextEmail'>\r\n            <Form.Label column sm='1'>\r\n              Prescription\r\n            </Form.Label>\r\n            <Col sm='10'>\r\n              <Form.Control as='textarea' rows='3' \r\n              value={this.state.prescription} onChange={(e)=>this.handleChange(e)} />\r\n            </Col>\r\n          </Form.Group>\r\n\r\n          <Button variant='primary' onClick={this.handleShow}>\r\n            Generate QR code.\r\n          </Button>\r\n        </Form>\r\n        <Modal show={this.state.show} onHide={this.handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>QR code</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body><QRCode value={this.state.prescription}/></Modal.Body>\r\n          <Modal.Footer>\r\n            <Link to=\"/dashboard\">\r\n            <Button variant='secondary' onClick = {this.handleClick(data._id)}>\r\n              Finish\r\n            </Button>\r\n            </Link>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nModals.propTypes = {\r\n  getAPatient: PropTypes.func.isRequired,\r\n  freePatientData: PropTypes.func.isRequired,\r\n  patients: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  patients: state.patients,\r\n});\r\nexport default   connect(mapStateToProps, { getAPatient,freePatientData })(Modals)\r\n"]},"metadata":{},"sourceType":"module"}
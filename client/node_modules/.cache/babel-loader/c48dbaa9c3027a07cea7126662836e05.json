{"ast":null,"code":"import _classCallCheck from \"D:\\\\SEM-7\\\\CAD\\\\shms\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\SEM-7\\\\CAD\\\\shms\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\SEM-7\\\\CAD\\\\shms\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\SEM-7\\\\CAD\\\\shms\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\SEM-7\\\\CAD\\\\shms\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\SEM-7\\\\CAD\\\\shms\\\\client\\\\src\\\\components\\\\dashboard\\\\Cards.js\";\nimport React, { Component } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getPatientLists } from \"../../actions/patientlistActions\";\nimport { loginUser } from \"../../actions/authActions\";\n\nvar useCardStyles = function useCardStyles(theme) {\n  return {\n    root: {\n      minWidth: 275,\n      maxWidth: 275\n    },\n    bullet: {\n      display: \"inline-block\",\n      margin: \"0 2px\",\n      transform: \"scale(0.8)\"\n    },\n    title: {\n      fontSize: 14\n    },\n    pos: {\n      marginBottom: 12\n    }\n  };\n};\n\nvar SimpleCard = /*#__PURE__*/function (_Component) {\n  _inherits(SimpleCard, _Component);\n\n  function SimpleCard() {\n    _classCallCheck(this, SimpleCard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SimpleCard).apply(this, arguments));\n  }\n\n  _createClass(SimpleCard, [{\n    key: \"render\",\n    value: function render() {\n      var classes = useCardStyles();\n      return /*#__PURE__*/React.createElement(Card, {\n        className: classes.root,\n        style: {\n          backgroundImage: \"linear-gradient(180deg,rgb(12,194,146),rgb(13, 211, 158),rgb(25, 240, 183))\",\n          minWidth: 275,\n          maxWidth: 275\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h4\",\n        component: \"h2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(Typography, {\n        className: classes.pos,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }, \"Disease\", /*#__PURE__*/React.createElement(Typography, {\n        className: classes.title,\n        color: \"textSecondary\",\n        gutterBottom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, \"Word of the Day\")), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"body2\",\n        component: \"p\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }, \"Description\", /*#__PURE__*/React.createElement(Typography, {\n        className: classes.title,\n        color: \"textSecondary\",\n        gutterBottom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, \"Word of the Day\"))), /*#__PURE__*/React.createElement(CardActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }, \"Write Prescription\")));\n    }\n  }]);\n\n  return SimpleCard;\n}(Component);\n\nSimpleCard.propTypes = {\n  getPatientLists: PropTypes.func.isRequired,\n  patients: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    patients: state.patients\n  };\n};\n\nexport default withStyles(useCardStyles)(connect(mapStateToProps, {\n  loginUser: loginUser,\n  getPatientLists: getPatientLists\n})(SimpleCard));","map":{"version":3,"sources":["D:/SEM-7/CAD/shms/client/src/components/dashboard/Cards.js"],"names":["React","Component","makeStyles","withStyles","Card","CardActions","CardContent","Button","Typography","PropTypes","connect","getPatientLists","loginUser","useCardStyles","theme","root","minWidth","maxWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","SimpleCard","classes","backgroundImage","propTypes","func","isRequired","patients","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPatientLists } from \"../../actions/patientlistActions\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\n\r\nconst useCardStyles = theme => ({\r\n  root: {\r\n    minWidth: 275,\r\n    maxWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nclass SimpleCard extends Component {\r\n  render() {\r\n    const classes = useCardStyles();\r\n    return (\r\n      <Card\r\n        className={classes.root}\r\n        style={{\r\n          backgroundImage:\r\n            \"linear-gradient(180deg,rgb(12,194,146),rgb(13, 211, 158),rgb(25, 240, 183))\",\r\n          minWidth: 275,\r\n          maxWidth: 275,\r\n        }}\r\n      >\r\n        <CardContent>\r\n          <Typography variant='h4' component='h2'>\r\n            Name\r\n          </Typography>\r\n          <Typography className={classes.pos}>\r\n            Disease\r\n            <Typography\r\n              className={classes.title}\r\n              color='textSecondary'\r\n              gutterBottom\r\n            >\r\n              Word of the Day\r\n            </Typography>\r\n          </Typography>\r\n\r\n          <Typography variant='body2' component='p'>\r\n            Description\r\n            <Typography\r\n              className={classes.title}\r\n              color='textSecondary'\r\n              gutterBottom\r\n            >\r\n              Word of the Day\r\n            </Typography>\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions>\r\n          <button>Write Prescription</button>\r\n        </CardActions>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nSimpleCard.propTypes = {\r\n  getPatientLists: PropTypes.func.isRequired,\r\n  patients: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  patients: state.patients,\r\n});\r\nexport default withStyles(useCardStyles)(\r\n  connect(mapStateToProps, { loginUser, getPatientLists })(SimpleCard)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}
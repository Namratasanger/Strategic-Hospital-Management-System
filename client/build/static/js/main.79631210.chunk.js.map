{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/patientlistReducer.js","reducers/index.js","store.js","components/nav/nav.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/private-route/PrivateRoute.js","actions/patientlistActions.js","components/dashboard/Modals.js","components/dashboard/Cards.js","components/dashboard/Tabs.js","components/dashboard/Dashboard.js","App.js","serviceWorker.js","index.js","images/unlock.svg","images/home-image.svg"],"names":["setAuthToken","token","axios","defaults","headers","common","loginUser","userData","dispatch","post","then","res","data","localStorage","setItem","decoded","jwt_decode","setCurrentUser","catch","err","type","payload","response","logoutUser","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","removeItem","stop","_x","apply","this","arguments","isEmpty","require","initialState","isAuthenticated","user","loading","list","diseases","error","combineReducers","auth","state","length","undefined","action","objectSpread","errors","patients","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","Nav","_this","authLinks","react_default","createElement","Link","to","className","onClick","props","guestLinks","style","display","justifyContent","alignItems","minHeight","backgroundColor","console","log","Component","connect","Landing","marginTop","left","marginLeft","width","position","src","homeImage","alt","top","fontSize","fontFamily","borderRadius","letterSpacing","Register","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","defineProperty","target","id","value","onSubmit","preventDefault","newUser","name","email","password","password2","registerUser","history","push","nextProps","unlock","paddingLeft","noValidate","classnames","invalid","htmlFor","withRouter","Login","emailnotfound","passwordincorrect","component","rest","objectWithoutProperties","Route","assign","render","Redirect","getPatientLists","getItem","authorization","sent","t0","msg","status","Modals","show","prescription","handleShow","bind","assertThisInitialized","handleClose","freePatientData","getAPatient","match","params","_this2","Fragment","Form","Group","as","Row","controlId","Label","column","sm","Col","Control","plaintext","readOnly","defaultValue","from","disease","rows","description","handleChange","Button","variant","Modal","onHide","Header","closeButton","Title","Body","qrcode_react_lib_default","Footer","handleClick","_id","_ref2","_callee2","_context2","get","_x2","_ref3","_callee3","_context3","delete","concat","_x3","SimpleCard","setTimeout","classes","flexWrap","keys","map","key","toString","split","index","Card","root","minWidth","maxWidth","margin","CardContent","Typography","pos","title","color","gutterBottom","borderColor","borderWidth","border","CardActions","alignContent","textDecoration","withStyles","theme","bullet","transform","marginBottom","TabPanel","children","other","role","hidden","aria-labelledby","flexDirection","Box","p","useStyles","makeStyles","flexGrow","palette","background","paper","height","tabs","borderRight","divider","VerticalTabs","_React$useState","React","useState","_React$useState2","slicedToArray","setValue","Tabs","orientation","event","newValue","aria-label","Tab","label","aria-controls","Cards","Dashboard","jwtToken","currentTime","Date","now","exp","location","href","App","es","BrowserRouter","nav_nav","exact","path","Switch","private_route_PrivateRoute","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.79631210.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst setAuthToken = token => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setAuthToken;\n","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\nimport {\n  GET_ERRORS,\n  SET_CURRENT_USER,\n  USER_LOADING,\n  PATIENT_ERRORS,\n} from \"./types\";\n\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n  axios\n    .post(\"/api/users/register\", userData)\n    .then(res => history.push(\"/login\"))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n      })\n    );\n};\n\n// Login - get user token\nexport const loginUser = userData => dispatch => {\n  axios\n    .post(\"/api/users/login\", userData)\n    .then(res => {\n      // Save to localStorage\n      // Set token to localStorage\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n      })\n    );\n};\n\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded,\n  };\n};\n\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING,\n  };\n};\n\n// Log user out\nexport const logoutUser = () => async dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\nexport const GET_LIST = \"GET_LIST\";\nexport const LIST_ERRORS = \"LIST_ERRORS\";\nexport const GET_PATIENT = \"GET_PATIENT\";\nexport const PATIENT_ERRORS = \"PATIENT_ERRORS\";\nexport const GET_A_PATIENT = \"GET_A_PATIENT\";\nexport const FREE_A_PATIENT = \"FREE_A_PATIENT\";\n\n","import { SET_CURRENT_USER, USER_LOADING } from \"../actions/types\";\n\nconst isEmpty = require(\"is-empty\");\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n  loading: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload,\n      };\n    case USER_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { GET_PATIENT,GET_A_PATIENT ,PATIENT_ERRORS,FREE_A_PATIENT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  list: {},\r\n  diseases: [],\r\n  error: {},\r\n  data:[],\r\n  loading: true,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case GET_PATIENT:\r\n      return {\r\n        ...state,\r\n        list: payload,\r\n        loading: false,\r\n      };\r\n    case GET_A_PATIENT:\r\n      return{\r\n        ...state,\r\n        data:payload,\r\n        loading:false\r\n      }\r\n      case FREE_A_PATIENT:\r\n        return{\r\n          ...state,\r\n          data:payload,\r\n          loading:false\r\n        }\r\n    case PATIENT_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport errorReducer from \"./errorReducer\";\nimport patientlistReducer from \"./patientlistReducer\";\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer,\n  patients: patientlistReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) ||\n      compose\n  )\n);\n\nexport default store;\n","import React, { Component, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\n\r\nimport \"./nav.css\";\r\n\r\nclass Nav extends Component {\r\n  render() {\r\n    const authLinks = (\r\n      <Link to='/login' className='links'>\r\n        <li onClick={() => this.props.logoutUser()}>Logout</li>\r\n      </Link>\r\n    );\r\n    const guestLinks = (\r\n      <Link to='/login' className='links'>\r\n        <li>Login</li>\r\n      </Link>\r\n    );\r\n    return (\r\n      <nav\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"flex-end\",\r\n          alignItems: \"flex-end\",\r\n          minHeight: \"10vh\",\r\n          backgroundColor: \"#3f3d56\",\r\n        }}\r\n      >\r\n        <ul className='nav-links'>\r\n          <Link to='/' className='links'>\r\n            <li>Home</li>\r\n          </Link>\r\n          <Link to='/login' className='links'>\r\n            <li>About Us</li>\r\n          </Link>\r\n          {console.log(this.props.auth.isAuthenticated)}\r\n          {this.props.auth.isAuthenticated ? authLinks : guestLinks}\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nNav.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logoutUser })(Nav);\r\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport unlock from \"../../images/unlock.svg\";\nimport homeImage from \"../../images/home-image.svg\";\nclass Landing extends Component {\n  render() {\n    return (\n      <div style={{ marginTop: \"7rem\" }} className='container'>\n        <img\n          style={{\n            left: 0,\n            marginLeft: \"10rem\",\n            width: 500,\n            position: \"absolute\",\n          }}\n          src={homeImage}\n          alt='avatar'\n        />\n        <div\n          style={{\n            top: 0,\n            marginTop: \"4rem\",\n            marginLeft: \"30rem\",\n          }}\n          className='row'\n        >\n          <div className='col s12 center-align'>\n            <h4 style={{ fontSize: \"50px\" }}>\n              <b>Strategic Hospital</b>\n              <span style={{ fontFamily: \"monospace\" }}></span>\n            </h4>\n            <p\n              style={{ fontSize: \"30px\" }}\n              className='flow-text grey-text text-darken-1'\n            >\n              Manangement System\n            </p>\n            <br />\n            <div className='col s6'>\n              <Link to='/register'>\n                <button\n                  style={{\n                    width: \"140px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\",\n                    backgroundColor: \"rgb(12,194,146)\",\n                  }}\n                  type='submit'\n                  className='btn btn-large waves-effect waves-light hoverable accent-3'\n                >\n                  Register\n                </button>\n              </Link>\n            </div>\n            <div className='col s6'>\n              <Link to='/login'>\n                {\" \"}\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\",\n                    backgroundColor: \"rgba(38,166,154)\",\n                  }}\n                  type='submit'\n                  className='btn btn-large waves-effect waves-light hoverable accent-3'\n                >\n                  Login\n                </button>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Landing;\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nimport unlock from \"../../images/unlock.svg\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2,\n    };\n\n    this.props.registerUser(newUser, this.props.history);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div style={{ marginTop: \"7rem\" }} className='container'>\n        <img\n          style={{ width: 500, position: \"absolute\" }}\n          className='tree'\n          src={unlock}\n          alt='Tree'\n        />\n        <div\n          style={{\n            top: 0,\n            marginTop: \"4rem\",\n            marginLeft: \"30rem\",\n            position: \"absolute\",\n          }}\n          className='row'\n        >\n          <div className='col s8 offset-s2'>\n            <Link to='/' className='btn-flat waves-effect'>\n              <i className='material-icons left'>keyboard_backspace</i> Back to\n              home\n            </Link>\n            <div className='col s12' style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Register</b> below\n              </h4>\n              <p className='grey-text text-darken-1'>\n                Already have an account? <Link to='/login'>Log in</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className='input-field col s12'>\n                <input\n                  onChange={this.onChange}\n                  value={this.state.name}\n                  error={errors.name}\n                  id='name'\n                  type='text'\n                  className={classnames(\"\", {\n                    invalid: errors.name,\n                  })}\n                />\n                <label htmlFor='name'>Name</label>\n                <span className='red-text'>{errors.name}</span>\n              </div>\n              <div className='input-field col s12'>\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id='email'\n                  type='email'\n                  className={classnames(\"\", {\n                    invalid: errors.email,\n                  })}\n                />\n                <label htmlFor='email'>Email</label>\n                <span className='red-text'>{errors.email}</span>\n              </div>\n              <div className='input-field col s12'>\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id='password'\n                  type='password'\n                  className={classnames(\"\", {\n                    invalid: errors.password,\n                  })}\n                />\n                <label htmlFor='password'>Password</label>\n                <span className='red-text'>{errors.password}</span>\n              </div>\n              <div className='input-field col s12'>\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password2}\n                  error={errors.password2}\n                  id='password2'\n                  type='password'\n                  className={classnames(\"\", {\n                    invalid: errors.password2,\n                  })}\n                />\n                <label htmlFor='password2'>Confirm Password</label>\n                <span className='red-text'>{errors.password2}</span>\n              </div>\n              <div className='col s12' style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\",\n\t\t\t\t\tbackgroundColor:\"rgb(12,194,146)\"\n                  }}\n                  type='submit'\n                  className='btn btn-large waves-effect waves-light hoverable blue accent-3'\n                >\n                  Sign up\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nimport unlock from \"../../images/unlock.svg\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const userData = {\n      email: this.state.email,\n      password: this.state.password,\n    };\n\n    this.props.loginUser(userData);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div style={{ marginTop: \"7rem\" }} className='container'>\n        <img\n          style={{ width: 500, position: \"absolute\" }}\n          src={unlock}\n          alt='avatar'\n        />\n        <div\n          style={{ top: 0, marginTop: \"4rem\", marginLeft: \"30rem\" }}\n          className='row'\n        >\n          <div className='col s8 offset-s2'>\n            <Link to='/' className='btn-flat waves-effect'>\n              <i className='material-icons left'>keyboard_backspace</i> Back to\n              home\n            </Link>\n            <div className='col s12' style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Login</b> below\n              </h4>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className='input-field col s12'>\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id='email'\n                  type='email'\n                  className={classnames(\"\", {\n                    invalid: errors.email || errors.emailnotfound,\n                  })}\n                />\n                <label htmlFor='email'>Email</label>\n                <span className='red-text'>\n                  {errors.email}\n                  {errors.emailnotfound}\n                </span>\n              </div>\n              <div className='input-field col s12'>\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id='password'\n                  type='password'\n                  className={classnames(\"\", {\n                    invalid: errors.password || errors.passwordincorrect,\n                  })}\n                />\n                <label htmlFor='password'>Password</label>\n                <span className='red-text'>\n                  {errors.password}\n                  {errors.passwordincorrect}\n                </span>\n              </div>\n              <div className='col s12' style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\",\n                    backgroundColor: \"rgb(12,194,146)\",\n                  }}\n                  type='submit'\n                  className='btn btn-large waves-effect waves-light hoverable accent-3'\n                >\n                  Login\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { loginUser })(Login);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import axios from \"axios\";\r\n\r\nimport { GET_PATIENT, PATIENT_ERRORS,GET_A_PATIENT,FREE_A_PATIENT } from \"./types\";\r\n\r\n//get all patients data\r\nexport const getPatientLists = () => async dispatch => {\r\n  try {\r\n    const token = localStorage.getItem(\"jwtToken\");\r\n    const res = await axios.post(\"/api/patient/all\", {\r\n      headers: { authorization: token },\r\n    });\r\n    dispatch({\r\n      type: GET_PATIENT,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PATIENT_ERRORS,\r\n      payload: { msg: err.response, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//get the patient data\r\nexport const getAPatient = (id) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(\"/api/patient\", {\r\n      params: {\r\n        id: id\r\n      }\r\n    });\r\n    dispatch({\r\n      type: GET_A_PATIENT,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PATIENT_ERRORS,\r\n      payload: { msg: err.response, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//free the patient data\r\nexport const freePatientData = (id) => async dispatch => {\r\n  try {\r\n    const res = await axios.delete(`/api/patient/${id}`);\r\n    dispatch({\r\n      type: FREE_A_PATIENT,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PATIENT_ERRORS,\r\n      payload: { msg: err.response},\r\n    });\r\n  }\r\n};\r\n\r\n","import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPatientLists, getAPatient,freePatientData } from \"../../actions/patientlistActions\";\r\nimport QRCode from \"qrcode.react\"\r\n\r\nclass Modals extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false,\r\n      prescription:\"Enter the prescription here\",\r\n    };\r\n    this.handleShow = this.handleShow.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n  }\r\n  handleShow() {\r\n    console.log(\"in handle show\");\r\n    this.setState({\r\n      show: true,\r\n    });\r\n  }\r\n  handleClose() {\r\n    console.log(\"in handle close\");\r\n    this.setState({\r\n      show: false,\r\n    });\r\n  }\r\n  handleChange(e){\r\n    console.log(e.target.value)\r\n    this.setState({\r\n      prescription : e.target.value\r\n    })\r\n  }\r\n  handleClick(id){\r\n    console.log(\"patient id :\",id)\r\n    this.props.freePatientData(id)\r\n}\r\n  componentDidMount() {\r\n    console.log(\"component mounted\")\r\n    this.props.getAPatient(this.props.match.params.id);\r\n  }\r\n  componentWillUnmount(){\r\n    console.log(\"component unmounted\")\r\n    this.props.getPatientLists()\r\n\r\n  }\r\n  render() {\r\n\r\n    const { data } = this.props.patients;\r\n    return (\r\n      <>\r\n        <Link to='/dashboard' className='btn-flat waves-effect'>\r\n          <i className='material-icons left'>keyboard_backspace</i> Back to\r\n          patient list\r\n        </Link>\r\n        {console.log(\"id : \",data)}\r\n        <Form style={{ marginLeft: \"2rem\" }}>\r\n        <Form.Group as={Row} controlId='formPlaintextEmail'>\r\n            <Form.Label column sm='1'>\r\n              Name\r\n            </Form.Label>\r\n            <Col sm='10'>\r\n              <Form.Control\r\n                plaintext\r\n                readOnly\r\n                defaultValue={data.name }\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n          <Form.Group as={Row} controlId='formPlaintextEmail'>\r\n            <Form.Label column sm='1'>\r\n              Since\r\n            </Form.Label>\r\n            <Col sm='10'>\r\n              <Form.Control\r\n                plaintext\r\n                readOnly\r\n                defaultValue={typeof(data.from) === undefined ? \"No data available\" : data.from}\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n          <Form.Group as={Row} controlId='formPlaintextEmail'>\r\n            <Form.Label column sm='1'>\r\n              Disease\r\n            </Form.Label>\r\n            <Col sm='10'>\r\n              <Form.Control\r\n                plaintext\r\n                readOnly\r\n                defaultValue={data.disease }\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n          <Form.Group as={Row} controlId='formPlaintextEmail'>\r\n            <Form.Label column sm='1'>\r\n              Description\r\n            </Form.Label>\r\n            <Col sm='10'>\r\n              { !data.disease ? console.log(\"Data not available\") : console.log(\"Data available\")}\r\n              <Form.Control as='textarea' rows='3' readOnly defaultValue={!data.description?\"Not available\":data.description} />\r\n            </Col>\r\n          </Form.Group>\r\n          <Form.Group as={Row} controlId='formPlaintextEmail'>\r\n            <Form.Label column sm='1'>\r\n              Prescription\r\n            </Form.Label>\r\n            <Col sm='10'>\r\n              <Form.Control as='textarea' rows='3' \r\n              value={this.state.prescription} onChange={(e)=>this.handleChange(e)} />\r\n            </Col>\r\n          </Form.Group>\r\n\r\n          <Button variant='primary' onClick={this.handleShow}>\r\n            Generate QR code.\r\n          </Button>\r\n        </Form>\r\n        <Modal show={this.state.show} onHide={this.handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>QR code</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body><QRCode value={this.state.prescription}/></Modal.Body>\r\n          <Modal.Footer>\r\n            <Link to=\"/dashboard\">\r\n            <Button variant='secondary' onClick = {()=>this.handleClick(data._id)}>\r\n              Finish\r\n            </Button>\r\n            </Link>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nModals.propTypes = {\r\n  getPatientLists: PropTypes.func.isRequired,\r\n  getAPatient: PropTypes.func.isRequired,\r\n  freePatientData: PropTypes.func.isRequired,\r\n  patients: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  patients: state.patients,\r\n});\r\nexport default   connect(mapStateToProps, { getAPatient,freePatientData,getPatientLists })(Modals)\r\n","import React, { Component } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPatientLists } from \"../../actions/patientlistActions\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\n\r\nconst useCardStyles = theme => ({\r\n  root: {\r\n    minWidth: 275,\r\n    maxWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\nclass SimpleCard extends Component {\r\n  componentDidMount() {\r\n    console.log(\" cards component mounted\")\r\n    setTimeout(()=>{\r\n      this.props.getPatientLists();\r\n    },500)\r\n  }\r\n  componentDidUnMount(){\r\n    console.log(\"cards unmounted\")\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { list } = this.props.patients;\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\",\r\n          marginLeft: \"150px\",\r\n        }}\r\n      >\r\n        {this.props.patients.list !== null\r\n          ? !this.props.patients.loading\r\n            ? console.log(\"lists : \", list)\r\n            : \"\"\r\n          : \"\"}\r\n        {list.data ? (\r\n          <p>{list.data}</p>\r\n        ) : (\r\n          Object.keys(list).map(key => {\r\n            console.log(list[key].disease.toString().split(\",\"));\r\n            Object.keys(list[key].disease.toString().split(\",\")).map(index => {\r\n              console.log(list[key].disease.toString().split(\",\")[index]);\r\n            });\r\n            return (\r\n              <Card\r\n                className={classes.root}\r\n                style={{\r\n                  // backgroundImage:\r\n                  //   \"linear-gradient(180deg,rgb(12,194,146),rgb(13, 231, 160),rgb(24, 242, 180))\",\r\n                  backgroundColor:\"#D5D5D5\",\r\n                  minWidth: 300,\r\n                  maxWidth: 300,\r\n                  margin: \"10px 20px 10px 20px\",\r\n                }}\r\n                key={list[key]._id}\r\n              >\r\n                <CardContent>\r\n                  <Typography variant='h4' component={'span'}>\r\n                    {list[key].name}\r\n                  </Typography>\r\n                  <br/>\r\n                  <Typography className={classes.pos} component={'span'}>\r\n                    Disease\r\n                    <br/>\r\n                    <Typography\r\n                      className={classes.title}\r\n                      color='textSecondary'\r\n                      gutterBottom\r\n                      component={'span'}\r\n                    >\r\n                      {list[key].disease}\r\n                    </Typography>\r\n                    <br/>\r\n                  </Typography>\r\n\r\n                  <Typography className={classes.pos} component={'span'}>\r\n                    Since\r\n                    <br/>\r\n                    <Typography\r\n                      className={classes.title}\r\n                      color='textSecondary'\r\n                      gutterBottom\r\n                      component={'span'}\r\n                    >\r\n                      {list[key].from}\r\n                    </Typography>\r\n                  </Typography>\r\n                  <br/>\r\n                  <Typography className={classes.pos} component={'span'}>\r\n                    Description\r\n                    <br/>\r\n                    <Typography\r\n                      className={classes.title}\r\n                      color='textSecondary'\r\n                      gutterBottom\r\n                      component={'span'}\r\n                    >\r\n                      {list[key].description}\r\n                    </Typography>\r\n                  </Typography>\r\n                </CardContent>\r\n                <div\r\n                  style={{\r\n                    borderColor: \"rgb(197, 251, 237)\",\r\n                    borderWidth: \"1px\",\r\n                    border: \"1px solid rgb(197, 251, 237)\",\r\n                  }}\r\n                ></div>\r\n                <CardActions >\r\n                  <Link to={'/modal/'+list[key]._id}>\r\n                    <div style={{border:\"none\",display:\"flex\",alignContent:\"center\"}}>\r\n                      <button style={{backgroundColor:\"inherit\",border:\"none\",textDecoration:\"none\"}}>Write Presctiption</button>\r\n                    </div>\r\n                  </Link>\r\n                </CardActions>\r\n              </Card>\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nSimpleCard.propTypes = {\r\n  getPatientLists: PropTypes.func.isRequired,\r\n  patients: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  patients: state.patients,\r\n});\r\nexport default withStyles(useCardStyles)(\r\n  connect(mapStateToProps, { loginUser, getPatientLists })(SimpleCard)\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nimport Cards from \"./Cards\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role='tabpanel'\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n      style={{ display: \"flex\", flexDirection: \"row\", position: \"absolute\" }}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography component={\"span\"}>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    \"aria-controls\": `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: \"flex\",\r\n    height: \"8vh\",\r\n  },\r\n  tabs: {\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n}));\r\n\r\nexport default function VerticalTabs() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Tabs\r\n        orientation='vertical'\r\n        value={value}\r\n        onChange={handleChange}\r\n        aria-label='Vertical tabs example'\r\n        className={classes.tabs}\r\n      >\r\n        <Tab label='Patient List' {...a11yProps(0)} />\r\n      </Tabs>\r\n      <TabPanel value={value} index={0}>\r\n        <Cards />\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getPatientLists } from \"../../actions/patientlistActions\";\nimport { loginUser } from \"../../actions/authActions\";\n\nimport Tabs from \"./Tabs\";\nclass Dashboard extends Component {\n  componentDidMount(){\n    console.log(\"component mounted\")\n  }\n  render() {\n    return (\n      <div>\n        <div className='row'>\n          <Tabs></Tabs>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\n\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport Navbar from \"./components/nav/nav\";\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Modal from \"./components/dashboard/Modals\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\n\nimport \"./App.css\";\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n  // Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className='App'>\n            <Navbar />\n            <Route exact path='/' component={Landing} />\n            <Route exact path='/register' component={Register} />\n            <Route exact path='/login' component={Login} />\n\n            <Switch>\n              <PrivateRoute exact path='/dashboard' component={Dashboard} />\n              <PrivateRoute exact path='/modal/:id' component={Modal} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/unlock.54952121.svg\";","module.exports = __webpack_public_path__ + \"static/media/home-image.53a44d68.svg\";"],"sourceRoot":""}